@using System.Data
@{
  Layout = "~/Views/Shared/_SalesLayout.cshtml";
  DataTable prodManagerOrders = ViewBag.ProdManagerOrders as DataTable;
}
<style>
  .phone-popup {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    background-color: #fff;
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 6px 12px;
    white-space: nowrap;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    display: none;
  }

  .phone-popup a {
    color: #0d6efd;
    text-decoration: none;
    font-weight: 500;
  }

  .phone-popup a:hover {
    text-decoration: underline;
  }
</style>
<div class="container-fluid">
  <div class="row g-3">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">Invoice List</h5>
          <div class="d-flex">
            <button class="btn btn-sm btn-primary" type="button" data-bs-toggle="offcanvas"
              data-bs-target="#create_project">Create
              an order</button>
          </div>
          @* Filter *@
          <div class="card-action">
            <div class="dropdown">
              <a href="#" class="dropdown-toggle after-none gray-8" data-bs-toggle="dropdown" aria-expanded="false"
                title="Card Filter">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                  <path fill-opacity="0.4"
                    d="M1.5 0.5C1.5 0.367392 1.55268 0.240215 1.64645 0.146447C1.74021 0.0526784 1.86739 0 2 0H14C14.1326 0 14.2598 0.0526784 14.3536 0.146447C14.4473 0.240215 14.5 0.367392 14.5 0.5V4.5C14.5 4.62331 14.4544 4.74226 14.372 4.834L10 9.692V14.5C9.99992 14.6049 9.96685 14.7071 9.90547 14.7922C9.8441 14.8772 9.75752 14.9409 9.658 14.974L6.658 15.974C6.58287 15.999 6.50288 16.0058 6.4246 15.9939C6.34632 15.982 6.272 15.9516 6.20775 15.9053C6.1435 15.859 6.09116 15.7982 6.05504 15.7277C6.01893 15.6572 6.00006 15.5792 6 15.5V9.692L1.628 4.834C1.54561 4.74226 1.50002 4.62331 1.5 4.5V0.5ZM2.5 1V4.308L6.872 9.166C6.95439 9.25774 6.99998 9.37669 7 9.5V14.806L9 14.14V9.5C9.00002 9.37669 9.04561 9.25774 9.128 9.166L13.5 4.308V1H2.5Z">
                  </path>
                  <rect fill-opacity="0.9" x="4" y="2" width="8" height="3" rx="1"></rect>
                </svg>
              </a>
              <div class="dropdown-menu dropdown-menu-end shadow border-0 p-4 rounded-4" style="width: 300px;">
                <h6>Filter Options</h6>
                <div class="row g-3 mt-3">
                  <div class="col-12">
                    <label class="form-label small text-muted">Sorted by:</label>
                    <input type="email" class="form-control" placeholder="Search">
                  </div>
                  <div class="col-12">
                    <label class="form-label small text-muted">Status:</label>
                    <select class="form-select">
                      <option selected="">Choose...</option>
                      <option>...</option>
                    </select>
                  </div>
                  <div class="col-12 text-end mt-4">
                    <button type="submit" class="btn btn-sm btn-primary">Apply</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="card-body">
          <div id="DataTables_Table_0_wrapper" class="dataTables_wrapper dt-bootstrap5 no-footer">
            <div class="row dt-row">
              <div class="col-sm-12">
                <table class="table">
                  @{
                    decimal totalBilled = prodManagerOrders.Rows.Cast<DataRow>()
                    .Sum(row =>
                    {
                      if (row["Amount Billed"] != DBNull.Value && decimal.TryParse(row["Amount Billed"].ToString(), out
                                      decimal val))
                      {
                        return val;
                      }
                      return 0m;
                    });

                    decimal totalPaid = prodManagerOrders.Rows.Cast<DataRow>()
                    .Sum(row =>
                    {
                      if (row["Amount Paid"] != DBNull.Value && decimal.TryParse(row["Amount Paid"].ToString(), out decimal
                                      val))
                      {
                        return val;
                      }
                      return 0m;
                    });

                    decimal totalDebt = prodManagerOrders.Rows.Cast<DataRow>()
                    .Sum(row =>
                    {
                      if (row["Debt"] != DBNull.Value && decimal.TryParse(row["Debt"].ToString(), out decimal val))
                      {
                        return val;
                      }
                      return 0m;
                    });
                  }
                  <tr class="table-secondary fw-bold">
                    <td>Total Quoted Amount: <span class="text-success">₹ @totalBilled.ToString("N2")</span></td>
                    <td>Total Paid Amount: <span class="text-primary">₹ @totalPaid.ToString("N2")</span></td>
                    <td>Total Pending Amount: <span class="text-danger">₹ @totalDebt.ToString("N2")</span></td>
                  </tr>
                </table>
                <div class="table-responsive">
                  <table id="myDataTable_no_filter"
                    class="table align-middle table-hover nowrap dataTable no-footer dtr-inline">
                    <thead>
                      <tr class="small text-muted text-uppercase">
                        <th style="display:none;">Hidden Data</th>
                        <th><span style="padding-right:20px;">Status</th>
                        <th><span style="padding-right:20px;">Vendor Name</th>
                        <th><span style="padding-right:20px;">Location</th>
                        <th><span style="padding-right:15px;">0.25L</th>
                        <th><span style="padding-right:20px;">0.5L</th>
                        <th><span style="padding-right:20px;">1L</th>
                        <th><span style="padding-right:20px;">2L</th>
                        <th><span style="padding-right:20px;">5L</th>
                        <th><span style="padding-right:20px;">20L</th>
                        <th><span style="padding-right:20px;">Paid</th>
                        <th><span style="padding-right:20px;">Debt</th>
                        <th><span style="padding-right:20px;">Billing Time</th>
                        <th><span style="padding-right:20px;"></th>
                      </tr>
                    </thead>
                    <tbody>
                      @if (prodManagerOrders != null)
                      {
                        foreach (DataRow row in prodManagerOrders.Rows)
                        {
                          int orderId = Convert.ToInt32(row["WaterCanOrderId"]);
                          string status = row["OrderStatus"].ToString();
                          <tr>
                            <td style="display:none;">
                              <span class="prod-manager">@row["Prod. Manager"]</span>
                              <span id="OrderId_@orderId">@orderId</span>
                            </td>
                            <td>
                              @if (status == "Pending")
                              {
                                <span class="badge bg-warning">Pending</span>
                              }
                              else if (status == "Collected")
                              {
                                <span class="badge bg-success">Completed</span>
                              }
                              else if (status == "Return")
                              {
                                <span class="badge bg-info">Returned</span>
                              }
                              else
                              {
                                <span class="badge bg-secondary">@status</span>
                              }
                            </td>
                            <td class="vendor-cell" style="position: relative;">
                              <a href="javascript:void(0);" class="vendor-name text-primary"
                                onclick="togglePhonePopup(this, '@row["Vendor Phone"]')">
                                @row["Vendor Name"]
                              </a>
                            </td>
                            <td>@row["Vendor Location"]</td>
                            <td>@row["0.25L"]</td>
                            <td>@row["0.5L"]</td>
                            <td>@row["1L"]</td>
                            <td>@row["2L"]</td>
                            <td>@row["5L"]</td>
                            <td>@row["20L"]</td>
                            <td>@row["Amount Paid"]</td>
                            <td>@row["Debt"]</td>
                            <td>@Convert.ToDateTime(row["BillingTime"]).ToString("dd-MMM-yyyy HH:mm")</td>
                            <td>
                              <button type="button" class="btn btn-link btn-sm text-muted" data-bs-toggle="tooltip"
                                data-bs-placement="top" title="Share bill">
                                <i class="fa fa-share"></i>
                              </button>
                              <button type="button" class="btn btn-sm btn-default" data-bs-toggle="tooltip"
                                data-bs-placement="top" title="Share link"><i class="fa fa-eye"></i></button>
                            </td>
                          </tr>
                        }
                      }
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div> <!--[ .row end ]-->
</div>

<script>
  function togglePhonePopup(element, phone) {
    // Close any other open popups first
    document.querySelectorAll('.phone-popup').forEach(p => p.remove());

    // Check if this one was already open
    const existingPopup = element.parentNode.querySelector('.phone-popup');
    if (existingPopup) {
      existingPopup.remove();
      return;
    }

    // Create popup
    const popup = document.createElement('div');
    popup.className = 'phone-popup';
    popup.innerHTML = `📞 <a href="tel:${phone}">${phone}</a>`;
    element.parentNode.appendChild(popup);
    popup.style.display = 'block';
  }

  // Close popup when clicking anywhere else
  document.addEventListener('click', function (e) {
    const isVendorCell = e.target.closest('.vendor-cell');
    if (!isVendorCell) {
      document.querySelectorAll('.phone-popup').forEach(p => p.remove());
    }
  });
  $(document).ready(function () {
    if (!$.fn.DataTable.isDataTable('#myDataTable_no_filter')) {
      $('#myDataTable_no_filter').DataTable({
        paging: false,
        searching: false,
        info: false,
        ordering: true,
        order: [],
        columnDefs: [
          { orderable: false, targets: -1 }
        ]
      });
    }
    $('#btnCreate').click(function () {
      var vendorOrderData = {
        Vendor: {
          Name: $('#Name').val(),
          Location: $('#Location').val(),
          Phone: $('#Phone').val(),
          Email: $('#Email').val()
        },
        WaterCanOrder: {
          ProdManagerId: parseInt($('#ProdManagerId').text()) || 0,
          SalesPersonId: parseInt($('#SalesPersonId').val()) || 0,
          Cases025Ltr: parseInt($('#Cases025Ltr').val()) || 0,
          Cases05Ltr: parseInt($('#Cases05Ltr').val()) || 0,
          Cases1Ltr: parseInt($('#Cases1Ltr').val()) || 0,
          Cases2Ltr: parseInt($('#Cases2Ltr').val()) || 0,
          Cases5Ltr: parseInt($('#Cases5Ltr').val()) || 0,
          Cases20Ltr: parseInt($('#Cases20Ltr').val()) || 0,
          AmountBilled: parseFloat($('#AmountBilled').val()) || 0,
          AmountPaid: parseFloat($('#AmountPaid').val()) || 0
        }
      };
      if (!vendorOrderData.Vendor.Name || !vendorOrderData.Vendor.Phone) {
        alert('Vendor Name and Phone are required.');
        return;
      }
      $.ajax({
        url: '/Sales/CreateVendorOrder',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(vendorOrderData),
        success: function (response) {
          $('#vendorOrderForm')[0].reset();
          var vendorName = $('#Name').val();
          $('#CreateOrderMsg')
            .removeClass('d-none alert-danger')
            .addClass('alert-success')
            .text('Order is created for ' + vendorName + '!')
            .fadeIn();
          setTimeout(function () {
            $('#CreateOrderMsg').fadeOut();
          }, 4000);
        },
        error: function (xhr) {
          $('#CreateOrderMsg')
            .removeClass('d-none alert-success')
            .addClass('alert-danger')
            .text('Something went wrong: ' + xhr.responseText)
            .fadeIn();
        }
      });
    });
  });
</script>
